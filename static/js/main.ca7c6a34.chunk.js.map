{"version":3,"sources":["components/card/Card.jsx","components/card-list/CardList.jsx","components/search-box/SearchBox.jsx","App.js","index.js"],"names":["Card","props","className","src","monster","id","alt","name","email","CardList","console","log","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","preventDefault","setState","searchField","target","value","state","fetch","then","response","json","users","catch","error","this","filteredMonsters","filter","toLowerCase","includes","Component","ReactDOM","render","document","getElementById"],"mappings":"wTAGaA,G,MAAO,SAACC,GAClB,OACG,sBAAKC,UAAU,iBAAf,UACG,qBAAKC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,0BAAoEC,IAAI,YAChF,6BAAKL,EAAMG,QAAQG,OACnB,4BAAIN,EAAMG,QAAQI,aCJdC,G,MAAW,SAACR,GAEtB,OADAS,QAAQC,IAAIV,GAET,qBAAKC,UAAU,YAAf,SACID,EAAMW,SAASC,KAAI,SAAAT,GAAO,OACxB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCNlBS,G,MAAY,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aACtC,OACG,uBACGC,KAAK,SACLf,UAAU,SACVa,YAAaA,EACbG,SAAUF,MCqCJG,G,wDAvCd,aAAe,IAAD,8BACb,gBAcDH,aAAe,SAAAI,GACdA,EAAEC,iBACF,EAAKC,SAAS,CAAEC,YAAaH,EAAEI,OAAOC,SAftC,EAAKC,MAAQ,CACZd,SAAU,GACVW,YAAa,IAJD,E,gEAQO,IAAD,OACnBI,MAAM,8CACJC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAAEV,SAAUmB,OACxCC,OAAM,SAAAC,GAAK,OAAIvB,QAAQC,IAAIsB,Q,+BAQpB,IAAD,EAC0BC,KAAKR,MAA/Bd,EADA,EACAA,SAAUW,EADV,EACUA,YACZY,EAAmBvB,EAASwB,QAAO,SAAAhC,GAAO,OAC/CA,EAAQG,KAAK8B,cAAcC,SAASf,EAAYc,kBAGjD,OACC,sBAAKnC,UAAU,MAAf,UACC,oBAAIA,UAAU,aAAd,8BACA,cAAC,EAAD,CACCa,YAAY,cACZC,aAAckB,KAAKlB,eAEpB,cAAC,EAAD,CAAUJ,SAAUuB,W,GAlCNI,cCDlBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.ca7c6a34.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Card.css';\r\n\r\nexport const Card = (props) => {\r\n   return (\r\n      <div className=\"card-container\">\r\n         <img src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} alt=\"monster\"/>\r\n         <h3>{props.monster.name}</h3>\r\n         <p>{props.monster.email}</p>\r\n      </div>\r\n   );\r\n};\r\n","import React from 'react';\r\nimport {Card} from '../card/Card';\r\nimport './CardList.css';\r\n\r\nexport const CardList = (props) => {\r\n   console.log(props);\r\n   return (\r\n      <div className=\"card-list\">\r\n         {props.monsters.map(monster => (\r\n            <Card key={monster.id} monster={monster}/>\r\n         ))}\r\n      </div>\r\n   );\r\n};\r\n\r\n\r\n","import React from 'react';\r\nimport './SearchBox.css';\r\n\r\nexport const SearchBox = ({ placeholder, handleChange }) => {\r\n   return (\r\n      <input\r\n         type='search'\r\n         className='search'\r\n         placeholder={placeholder}\r\n         onChange={handleChange}\r\n      />\r\n   );\r\n};\r\n","import React, { Component } from 'react';\nimport { CardList } from './components/card-list/CardList';\nimport { SearchBox } from './components/search-box/SearchBox';\n\nimport './App.css';\n\nclass App extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tmonsters: [],\n\t\t\tsearchField: '',\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\n\t\t\t.then(response => response.json())\n\t\t\t.then(users => this.setState({ monsters: users }))\n\t\t\t.catch(error => console.log(error));\n\t}\n\n\thandleChange = e => {\n\t\te.preventDefault();\n\t\tthis.setState({ searchField: e.target.value });\n\t};\n\n\trender() {\n\t\tconst { monsters, searchField } = this.state;\n\t\tconst filteredMonsters = monsters.filter(monster =>\n\t\t\tmonster.name.toLowerCase().includes(searchField.toLowerCase())\n\t\t);\n\n\t\treturn (\n\t\t\t<div className='App'>\n\t\t\t\t<h1 className='head-title'>Monsters Rolodex</h1>\n\t\t\t\t<SearchBox\n\t\t\t\t\tplaceholder='Search. . .'\n\t\t\t\t\thandleChange={this.handleChange}\n\t\t\t\t/>\n\t\t\t\t<CardList monsters={filteredMonsters} />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}